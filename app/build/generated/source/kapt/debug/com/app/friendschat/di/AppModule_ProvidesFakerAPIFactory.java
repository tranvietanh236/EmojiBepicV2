// Generated by Dagger (https://dagger.dev).
package com.app.friendschat.di;

import com.app.friendschat.data.api.retrofit.FakerApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesFakerAPIFactory implements Factory<FakerApi> {
  private final AppModule module;

  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ProvidesFakerAPIFactory(AppModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public FakerApi get() {
    return providesFakerAPI(module, retrofitProvider.get());
  }

  public static AppModule_ProvidesFakerAPIFactory create(AppModule module,
      Provider<Retrofit> retrofitProvider) {
    return new AppModule_ProvidesFakerAPIFactory(module, retrofitProvider);
  }

  public static FakerApi providesFakerAPI(AppModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.providesFakerAPI(retrofit));
  }
}
