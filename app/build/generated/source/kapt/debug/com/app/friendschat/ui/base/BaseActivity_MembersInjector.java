// Generated by Dagger (https://dagger.dev).
package com.app.friendschat.ui.base;

import androidx.databinding.ViewDataBinding;
import com.app.friendschat.data.scheduler.ISchedulerProvider;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector<VM extends BaseViewModel, DB extends ViewDataBinding> implements MembersInjector<BaseActivity<VM, DB>> {
  private final Provider<ViewModelFactory> factoryProvider;

  private final Provider<ISchedulerProvider> schedulerProvider;

  public BaseActivity_MembersInjector(Provider<ViewModelFactory> factoryProvider,
      Provider<ISchedulerProvider> schedulerProvider) {
    this.factoryProvider = factoryProvider;
    this.schedulerProvider = schedulerProvider;
  }

  public static <VM extends BaseViewModel, DB extends ViewDataBinding> MembersInjector<BaseActivity<VM, DB>> create(
      Provider<ViewModelFactory> factoryProvider, Provider<ISchedulerProvider> schedulerProvider) {
    return new BaseActivity_MembersInjector<VM, DB>(factoryProvider, schedulerProvider);
  }

  @Override
  public void injectMembers(BaseActivity<VM, DB> instance) {
    injectFactory(instance, factoryProvider.get());
    injectSchedulerProvider(instance, schedulerProvider.get());
  }

  @InjectedFieldSignature("com.app.friendschat.ui.base.BaseActivity.factory")
  public static <VM extends BaseViewModel, DB extends ViewDataBinding> void injectFactory(
      BaseActivity<VM, DB> instance, ViewModelFactory factory) {
    instance.factory = factory;
  }

  @InjectedFieldSignature("com.app.friendschat.ui.base.BaseActivity.schedulerProvider")
  public static <VM extends BaseViewModel, DB extends ViewDataBinding> void injectSchedulerProvider(
      BaseActivity<VM, DB> instance, ISchedulerProvider schedulerProvider) {
    instance.schedulerProvider = schedulerProvider;
  }
}
