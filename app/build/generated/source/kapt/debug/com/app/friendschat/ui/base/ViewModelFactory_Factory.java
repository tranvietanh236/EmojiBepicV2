// Generated by Dagger (https://dagger.dev).
package com.app.friendschat.ui.base;

import com.app.friendschat.data.scheduler.ISchedulerProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ViewModelFactory_Factory implements Factory<ViewModelFactory> {
  private final Provider<ISchedulerProvider> mSchedulerProvider;

  public ViewModelFactory_Factory(Provider<ISchedulerProvider> mSchedulerProvider) {
    this.mSchedulerProvider = mSchedulerProvider;
  }

  @Override
  public ViewModelFactory get() {
    return newInstance(mSchedulerProvider.get());
  }

  public static ViewModelFactory_Factory create(Provider<ISchedulerProvider> mSchedulerProvider) {
    return new ViewModelFactory_Factory(mSchedulerProvider);
  }

  public static ViewModelFactory newInstance(ISchedulerProvider mScheduler) {
    return new ViewModelFactory(mScheduler);
  }
}
